#!/usr/bin/env python
#  subunit: extensions to python unittest to get test results from subprocesses.
#  Copyright (C) 2008  Robert Collins <robertc@robertcollins.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

"""Filter a subunit stream through python's default unittest test runner."""

import sys
import unittest

from subunit import TestProtocolServer

class ProtocolTestCase(object):
    """A test case which reports a subunit stream."""

    def __call__(self, result=None):
        return self.run(result)

    def run(self, result=None):
        if result is None: result = self.defaultTestResult()
        protocol = TestProtocolServer(result)
        for line in sys.stdin:
            protocol.lineReceived(line)
        protocol.lostConnection()

runner = unittest.TextTestRunner(verbosity=2)
test = ProtocolTestCase()
if runner.run(test).wasSuccessful():
    exit_code = 0
else:
    exit_code = 1
sys.exit(exit_code)
